{"ast":null,"code":"var _jsxFileName = \"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/blockchain-developer-bootcamp-final-project/client/src/JobPost.js\";\nimport React, { Component } from \"react\";\nimport \"./JobPost.css\";\nexport default class JobPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      applicantAddrs: []\n    };\n\n    this.applyToJob = async event => {\n      event.preventDefault();\n\n      try {\n        console.log(\"applying to job with jobId \" + this.props.jobId);\n        const contract = this.props.contract;\n        const accounts = this.props.accounts;\n        let linkedIn = event.target.linkedIn.value;\n        await contract.methods.applyToJob(parseInt(this.props.jobId), linkedIn).send({\n          from: accounts[0]\n        });\n      } catch (error) {\n        alert(\"Error\");\n        console.error(error);\n      }\n    };\n\n    this.openForm = () => {\n      document.getElementById(\"applicationForm\" + this.props.jobId).style.display = \"block\";\n    };\n\n    this.closeForm = () => {\n      document.getElementById(\"applicationForm\" + this.props.jobId).style.display = \"none\";\n      document.getElementById(\"applicationFormLinkedIn\" + this.props.jobId).value = \"\";\n    };\n\n    this.viewApplicantapplicantAddrs = async () => {\n      // event.preventDefault();\n      try {\n        console.log(\"Viewing applicants to job with jobId \" + this.props.jobId);\n        const contract = this.props.contract;\n        const accounts = this.props.accounts;\n        let applicantAddrs = await contract.methods.viewApplicantAddresses(parseInt(this.props.jobId)).call({\n          from: accounts[0]\n        });\n        console.log(applicantAddrs);\n        this.setState({\n          applicantAddrs\n        });\n      } catch (error) {\n        alert(\"Error\");\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    let applicantAddrItems = this.state.applicantAddrs.map((applicantAddr, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"applicantAddrItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, applicantAddr));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Posted by: \", this.props.poster), React.createElement(\"button\", {\n      onClick: this.openForm,\n      className: \"open-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Apply\"), React.createElement(\"div\", {\n      className: \"form-popup\",\n      id: \"applicationForm\" + this.props.jobId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.applyToJob,\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"LinkedIn: \", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"applicationFormLinkedIn\" + this.props.jobId,\n      name: \"linkedIn\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send application\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn cancel\",\n      onClick: this.closeForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(\"button\", {\n      onClick: this.viewApplicantapplicantAddrs,\n      className: \"view-applicantAddrs-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"View Applicants' Addresses\"), applicantAddrItems);\n  }\n\n}","map":{"version":3,"sources":["/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/blockchain-developer-bootcamp-final-project/client/src/JobPost.js"],"names":["React","Component","JobPost","state","applicantAddrs","applyToJob","event","preventDefault","console","log","props","jobId","contract","accounts","linkedIn","target","value","methods","parseInt","send","from","error","alert","openForm","document","getElementById","style","display","closeForm","viewApplicantapplicantAddrs","viewApplicantAddresses","call","setState","render","applicantAddrItems","map","applicantAddr","index","title","description","poster"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./JobPost.css\";\n\nexport default class JobPost extends Component {\n    state = { applicantAddrs: [] };\n\n    applyToJob = async (event) => {\n        event.preventDefault();\n        try {\n            console.log(\"applying to job with jobId \" + this.props.jobId);\n            const contract = this.props.contract;\n            const accounts = this.props.accounts;\n            let linkedIn = event.target.linkedIn.value;\n            await contract.methods.applyToJob(parseInt(this.props.jobId), linkedIn).send({ from: accounts[0] });\n        } catch (error) {\n            alert(\"Error\");\n            console.error(error);\n        }\n    }\n    \n    openForm = () => {\n        document.getElementById(\"applicationForm\" + this.props.jobId).style.display = \"block\";\n    }\n    \n    closeForm = () => {\n        document.getElementById(\"applicationForm\" + this.props.jobId).style.display = \"none\";\n        document.getElementById(\"applicationFormLinkedIn\" + this.props.jobId).value = \"\";\n    }\n\n    // removeJob = async (event) => {\n    //     event.preventDefault();\n    //     if (window.confirm(\"Are you sure you want to remove this job posting?\"))\n    //     {\n    //         try {\n    //             console.log(\"removing job with jobId \" + this.props.jobId);\n    //             const contract = this.props.contract;\n    //             const accounts = this.props.accounts;\n    //             await contract.methods.removeJob(parseInt(this.props.jobId)).send({ from: accounts[0] });\n    //         } catch (error) {\n    //             alert(\"Error\");\n    //             console.error(error);\n    //         }\n    //     }\n    // }\n\n    viewApplicantapplicantAddrs = async () => {\n        // event.preventDefault();\n        try {\n            console.log(\"Viewing applicants to job with jobId \" + this.props.jobId);\n            const contract = this.props.contract;\n            const accounts = this.props.accounts;\n            let applicantAddrs = await contract.methods.viewApplicantAddresses(parseInt(this.props.jobId)).call({ from: accounts[0] });\n            \n            console.log(applicantAddrs);\n            \n            this.setState({ applicantAddrs })\n        } catch (error) {\n            alert(\"Error\");\n            console.error(error);\n        }\n    }\n\n    render() {\n\n        let applicantAddrItems = this.state.applicantAddrs.map((applicantAddr, index) => \n            <li key={index} className=\"applicantAddrItem\">{applicantAddr}</li>\n        );\n\n        return (\n            <div>\n                <h4>{this.props.title}</h4>\n                <p>{this.props.description}</p>\n                <p>Posted by: {this.props.poster}</p>\n\n                <button onClick={this.openForm} className=\"open-button\" >Apply</button>\n\n                <div className=\"form-popup\" id={\"applicationForm\" + this.props.jobId}>\n                    <form onSubmit={this.applyToJob} className=\"form-container\" >\n                        <label>\n                            LinkedIn: <input type=\"text\" id={\"applicationFormLinkedIn\" + this.props.jobId} name=\"linkedIn\" required />\n                        </label>\n                        <br/>\n                        <input type=\"submit\" value=\"Send application\" />\n                        <button type=\"button\" className=\"btn cancel\" onClick={this.closeForm}>Close</button>\n                    </form>\n                </div>\n\n                {/* <button onClick={this.removeJob} className=\"remove-job-button\" >Remove Job</button> */}\n                <button onClick={this.viewApplicantapplicantAddrs} className=\"view-applicantAddrs-button\" >View Applicants' Addresses</button>\n                {applicantAddrItems}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}