{"ast":null,"code":"import _regeneratorRuntime from\"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import JobBoardContract from\"./contracts/JobBoard.json\";import getWeb3 from\"./getWeb3\";import JobPost from\"./JobPost\";import\"./App.css\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={jobPostings:[],web3:null,accounts:null,contract:null};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3,accounts,networkId,deployedNetwork,instance,jobCount,jobPostings,jobId,job;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getWeb3();case 3:web3=_context.sent;_context.next=6;return web3.eth.getAccounts();case 6:accounts=_context.sent;_context.next=9;return web3.eth.net.getId();case 9:networkId=_context.sent;deployedNetwork=JobBoardContract.networks[networkId];instance=new web3.eth.Contract(JobBoardContract.abi,deployedNetwork&&deployedNetwork.address);_context.next=14;return instance.methods.jobCount().call();case 14:jobCount=_context.sent;jobPostings=[];jobId=1;case 17:if(!(jobId<jobCount)){_context.next=26;break;}_context.next=20;return instance.methods.getJob(jobId).call();case 20:job=_context.sent;job=[jobId,job.poster,job.title,job.description];jobPostings.push(job);case 23:jobId++;_context.next=17;break;case 26:_this.setState({jobPostings:jobPostings,web3:web3,accounts:accounts,contract:instance});_context.next=33;break;case 29:_context.prev=29;_context.t0=_context[\"catch\"](0);alert(\"Failed to load web3, accounts, or contract. Check console for details.\");console.error(_context.t0);case 33:case\"end\":return _context.stop();}}},_callee,null,[[0,29]]);}));_this.postJob=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var _this$state,jobPostings,accounts,contract,title,desc,jobId,posting,postings;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();_this$state=_this.state,jobPostings=_this$state.jobPostings,accounts=_this$state.accounts,contract=_this$state.contract;title=event.target.elements.jobTitle.value;desc=event.target.elements.jobDescription.value;_context2.next=6;return contract.methods.jobCount().call();case 6:jobId=_context2.sent;_context2.next=9;return contract.methods.postJob(title,desc).send({from:accounts[0]});case 9:posting=[jobId,accounts[0],title,desc];postings=jobPostings;postings.push(posting);_this.setState({jobPostings:postings});console.log(\"Posted new job with jobId \"+posting[0]);case 14:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.runExample=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _this$state2,jobPostings,accounts,contract,title,desc,response,posting,postings;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this$state2=_this.state,jobPostings=_this$state2.jobPostings,accounts=_this$state2.accounts,contract=_this$state2.contract;title=\"Solidity Developer\";desc=\"Write solidity, write tests, etc....\";_context3.next=5;return contract.methods.postJob(title,desc).send({from:accounts[0]});case 5:_context3.next=7;return contract.methods.getJob(1).call();case 7:response=_context3.sent;posting=[response['poster'],response['title'],response['description']];postings=jobPostings;postings.push(posting);_this.setState({jobPostings:postings});case 12:case\"end\":return _context3.stop();}}},_callee3);}));return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;if(!this.state.web3){return React.createElement(\"div\",null,\"Loading Web3, accounts, and contract...\");}var jobPosts=this.state.jobPostings.map(function(posting){return React.createElement(JobPost,{key:posting[0],web3:_this2.state.web3,accounts:_this2.state.accounts,contract:_this2.state.contract,jobId:posting[0],poster:posting[1],title:posting[2],description:posting[3]});});return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",null,\"A Decentralized Job Board\"),React.createElement(\"hr\",null),React.createElement(\"form\",{onSubmit:this.postJob},React.createElement(\"label\",null,\"Job title: \",React.createElement(\"input\",{type:\"text\",name:\"jobTitle\",required:true})),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Job description: \",React.createElement(\"input\",{type:\"text\",name:\"jobDescription\",required:true})),React.createElement(\"br\",null),React.createElement(\"input\",{type:\"submit\",value:\"Post job\"})),React.createElement(\"br\",null),jobPosts);}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/ProjectFrontend/src/App.js"],"names":["React","Component","JobBoardContract","getWeb3","JobPost","App","state","jobPostings","web3","accounts","contract","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","methods","jobCount","call","jobId","getJob","job","poster","title","description","push","setState","alert","console","error","postJob","event","preventDefault","target","elements","jobTitle","value","desc","jobDescription","send","from","posting","postings","log","runExample","response","jobPosts","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport JobBoardContract from \"./contracts/JobBoard.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport JobPost from \"./JobPost\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { jobPostings: [], web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = JobBoardContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        JobBoardContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const jobCount = await instance.methods.jobCount().call();\n      let jobPostings = []\n      for (var jobId = 1; jobId < jobCount; jobId++) {\n        let job = await instance.methods.getJob(jobId).call();\n        job = [jobId, job.poster, job.title, job.description];\n        jobPostings.push(job);\n      }\n\n      this.setState({ jobPostings, web3, accounts, contract: instance });\n    } catch (error) {\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n    }\n  };\n\n  postJob = async (event) => {\n    event.preventDefault();\n    const { jobPostings, accounts, contract } = this.state;\n\n    let title = event.target.elements.jobTitle.value;\n    let desc = event.target.elements.jobDescription.value;\n    let jobId = await contract.methods.jobCount().call();\n    await contract.methods.postJob(title, desc).send({ from: accounts[0] });\n\n    let posting = [jobId, accounts[0], title, desc];\n    let postings = jobPostings;\n    postings.push(posting);\n\n    this.setState({ jobPostings: postings });\n\n    console.log(\"Posted new job with jobId \" + posting[0])\n  }\n\n  runExample = async () => {\n    const { jobPostings, accounts, contract } = this.state;\n\n    var title = \"Solidity Developer\";\n    var desc = \"Write solidity, write tests, etc....\";\n    await contract.methods.postJob(title, desc).send({ from: accounts[0] });\n    let response = await contract.methods.getJob(1).call();\n    let posting = [response['poster'], response['title'], response['description']];\n    let postings = jobPostings;\n    postings.push(posting);\n\n    this.setState({ jobPostings: postings });\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n\n    let jobPosts = this.state.jobPostings.map((posting) => \n        <JobPost key={posting[0]} web3={this.state.web3} accounts={this.state.accounts} contract={this.state.contract} \n            jobId={posting[0]} poster={posting[1]} title={posting[2]} description={posting[3]} />\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>A Decentralized Job Board</h1>\n        <hr/>\n        <form onSubmit={this.postJob}>\n            <label>\n                Job title: <input type=\"text\" name=\"jobTitle\" required />\n            </label>\n            <br/>\n            <label>\n                Job description: <input type=\"text\" name=\"jobDescription\" required />\n            </label>\n            <br/>\n            <input type=\"submit\" value=\"Post job\" />\n        </form>\n        <br/>\n        {jobPosts}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}