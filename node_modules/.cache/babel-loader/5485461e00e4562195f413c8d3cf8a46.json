{"ast":null,"code":"var _jsxFileName = \"/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/blockchain-developer-bootcamp-final-project/client/src/JobPost.js\";\nimport React, { Component } from \"react\";\nimport \"./JobPost.css\";\nexport default class JobPost extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.applyToJob = async event => {\n      // TODO: Write this\n      event.preventDefault();\n      const _this$state = this.state,\n            jobPostings = _this$state.jobPostings,\n            accounts = _this$state.accounts,\n            contract = _this$state.contract;\n      let title = event.target.elements.jobTitle.value;\n      let desc = event.target.elements.jobDescription.value;\n      let jobId = await contract.methods.jobCount().call();\n      await contract.methods.postJob(title, desc).send({\n        from: accounts[0]\n      }); // let response = await contract.methods.getJob(jobPostings.length).call();\n      // let posting = [response['poster'], response['title'], response['description']];\n\n      let posting = [jobId, accounts[0], title, desc];\n      let postings = jobPostings;\n      postings.push(posting);\n      this.setState({\n        jobPostings: postings\n      });\n    };\n\n    this.openForm = () => {\n      document.getElementById(\"myForm\").style.display = \"block\"; // document.getElementsByClassName.style.display = \"block\";\n    };\n\n    this.closeForm = () => {\n      document.getElementById(\"myForm\").style.display = \"none\";\n    };\n  }\n\n  render() {\n    return (// TODO: Add a button to apply to a job\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.description), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Posted by: \", this.props.poster), React.createElement(\"button\", {\n        onclick: this.openForm,\n        class: \"open-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Apply\"), React.createElement(\"div\", {\n        class: \"form-popup\",\n        id: \"myForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"LinkedIn: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"linkedIn\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Send application\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/caleb/Desktop/myprograms/ConsenSysBootcampStuff/blockchain-developer-bootcamp-final-project/client/src/JobPost.js"],"names":["React","Component","JobPost","applyToJob","event","preventDefault","state","jobPostings","accounts","contract","title","target","elements","jobTitle","value","desc","jobDescription","jobId","methods","jobCount","call","postJob","send","from","posting","postings","push","setState","openForm","document","getElementById","style","display","closeForm","render","props","description","poster"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./JobPost.css\";\n\nexport default class JobPost extends Component {\n\n    applyToJob = async (event) => {\n        // TODO: Write this\n\n        event.preventDefault();\n        const { jobPostings, accounts, contract } = this.state;\n    \n        let title = event.target.elements.jobTitle.value;\n        let desc = event.target.elements.jobDescription.value;\n        let jobId = await contract.methods.jobCount().call();\n        await contract.methods.postJob(title, desc).send({ from: accounts[0] });\n    \n        // let response = await contract.methods.getJob(jobPostings.length).call();\n        // let posting = [response['poster'], response['title'], response['description']];\n        let posting = [jobId, accounts[0], title, desc];\n        let postings = jobPostings;\n        postings.push(posting);\n    \n        this.setState({ jobPostings: postings });\n      }\n    \n\n    openForm = () => {\n        document.getElementById(\"myForm\").style.display = \"block\";\n        // document.getElementsByClassName.style.display = \"block\";\n    }\n    \n    closeForm = () => {\n        document.getElementById(\"myForm\").style.display = \"none\";\n    }\n\n    render() {\n        return (\n\n            // TODO: Add a button to apply to a job\n\n            <div>\n\n                <h4>{this.props.title}</h4>\n                <p>{this.props.description}</p>\n                <p>Posted by: {this.props.poster}</p>\n\n                <button onclick={this.openForm} class=\"open-button\" >Apply</button>\n\n                <div class=\"form-popup\" id=\"myForm\">\n                    <form  class=\"form-container\" >\n                        <label>\n                            LinkedIn: <input type=\"text\" name=\"linkedIn\" required />\n                        </label>\n                        <br/>\n                        <input type=\"submit\" value=\"Send application\" />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}